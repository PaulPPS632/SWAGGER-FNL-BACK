services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  mysql:
    image: mysql:8
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}  # Definir solo la contrase√±a del usuario root
    healthcheck:
      test:
        ["CMD", "mysqladmin", "ping", "-h", "mysql", "-u", "root", "-p${DB_PASSWORD}"]  # Usar el nombre de servicio
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql_data:/var/lib/mysql
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      JWT_SECRET: ${JWT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: mysql  # Cambiar 127.0.0.1 por mysql
      DB_DIALECT: ${DB_DIALECT}
      DB_PORT: ${DB_PORT}
      EMAIL: ${EMAIL}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      ALTER: ${ALTER}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
volumes:
  mysql_data:
